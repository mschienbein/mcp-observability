[project]
name = "mcp-observability-demo"
version = "0.1.0"
description = "MCP observability demo: separate FastMCP tools and feedback servers with Langfuse tracing"
readme = "README.md"
authors = [ { name = "Windsurf Demo" } ]
requires-python = ">=3.10"

# Core runtime dependencies
dependencies = [
  "fastapi>=0.111",
  "starlette>=0.37",
  "uvicorn[standard]>=0.30",
  "fastmcp>=2.10",
  "langfuse>=2.0.0",
  "redis>=5.0",
  # Simple local client for testing MCP HTTP servers
  "mcp>=1.1.0",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["server", "server.common", "server.tools_server", "server.feedback_server"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[project.scripts]
# MCP Servers
tools-server = "server.tools_server.main:main"
feedback-server = "server.feedback_server.main:main"

# Test Clients
mcp-tools-client = "clients.mcp_client:test_tools"
mcp-feedback-client = "clients.mcp_client:test_feedback"
langfuse-test = "clients.langfuse_test:main"

[tool.uv.scripts]
# UI Development
ui-install = "npm --prefix ui install"
ui-dev = "npm --prefix ui run dev"
ui-build = "npm --prefix ui run build" 
ui-preview = "npm --prefix ui run preview"

# Servers
server-tools = "uv run python -m server.tools_server.main"
server-feedback = "uv run python -m server.feedback_server.main"

# Tests
test-mcp-tools = "uv run python clients/mcp_client.py tools"
test-mcp-feedback = "uv run python clients/mcp_client.py feedback"
test-langfuse = "uv run python clients/langfuse_test.py"
test-trace = "uv run python clients/test_langfuse_trace.py"

